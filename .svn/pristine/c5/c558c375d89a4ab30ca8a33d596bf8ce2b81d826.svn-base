POTApp.controller('PersonalInfoController',function($scope, $state, PersonalInfoService, VehicleService,StorageService,$log,$filter) {
	$scope.titleList = '';
	$scope.listOfAreas = '';
	$scope.pincodeList = '';
	$scope.pincodeList = '';
	$scope.citylist = [];
	$scope.arealist = [];
	$scope.cityMasterdtoList=getlistOfCities();
	$scope.minAgeDob= moment().subtract(18,'year').format('DD/MM/YYYY');
	$('.customer_cols div:nth-child(2n)').addClass('clearfix xs-visible sm-visible md-visible');
	PersonalInfoService .titleList() .then(
		function(response) {
			$scope.titleList = response.data.partyTitleDtoList;
		});
	var personalDetails = StorageService.get('personalInfo');
	var vehicleDetails = StorageService.get('vehicleInfo');
	if (angular.isUndefined(personalDetails)) {
		$scope.personalInfo = {
				title : '',
				firstName : '',
				lastName : '',
				dob : '',
				address1 : '',
				address2 : '',
				address3 : '',
				isEnableAreaEdit:false,
				city : '',
				area : '',
				pincode : '',
				mobileNo : '',
				alterMobileNo : '',
				panNo : '',
				std : '',
				phonealt : '',
				email : '',
				alterEmail:''
		};
	} else {
		$scope.personalInfo = {
				title : angular.isUndefined(personalDetails.title) ? '' : personalDetails.title,
				firstName : angular.isUndefined(personalDetails.firstName) ? '': personalDetails.firstName,
				lastName : angular.isUndefined(personalDetails.lastName) ? '': personalDetails.lastName,
				dob : angular.isUndefined(personalDetails.dob) ? '': personalDetails.dob,
				address1 : angular.isUndefined(personalDetails.address1) ? '': personalDetails.address1,
				address2 : angular.isUndefined(personalDetails.address2) ? '': personalDetails.address2,
				address3 : angular.isUndefined(personalDetails.address3) ? '': personalDetails.address3,
				isEnableAreaEdit:angular.isUndefined(personalDetails.isEnableAreaEdit) ? '': personalDetails.isEnableAreaEdit,
				city : angular.isUndefined(personalDetails.city) ? '': personalDetails.city,
				area : angular.isUndefined(personalDetails.area) ? '': personalDetails.area,
				pincode : angular.isUndefined(personalDetails.pincode) ? '': personalDetails.pincode,
				mobileNo : angular.isUndefined(personalDetails.mobileNo) ? '': personalDetails.mobileNo,
				alterMobileNo : angular.isUndefined(personalDetails.alterMobileNo) ? '': personalDetails.alterMobileNo,
				panNo : angular.isUndefined(personalDetails.panNo) ? '': personalDetails.panNo,
				std : angular.isUndefined(personalDetails.std) ? '': personalDetails.std,
				phonealt : angular.isUndefined(personalDetails.phonealt) ? '': personalDetails.phonealt,
				email : angular.isUndefined(personalDetails.email) ? '': personalDetails.email,
				alterEmail:angular.isUndefined(personalDetails.alterEmail) ? '': personalDetails.alterEmail	
		};
		$scope.vehicleInfo = {
			vehicleRegisteredTo:angular.isUndefined(vehicleDetails.vehicleRegisteredTo.name) ? '' : vehicleDetails.vehicleRegisteredTo.name
		};
	}
	$scope.upper = function(panNo) {
		$scope.personalInfo.panNo = panNo.toUpperCase();
	}
	$scope.goVechilePage = function(e, form) {
		e.preventDefault();
		form.$setSubmitted();
		if ($scope.form.$valid && $scope.personalInfo.panNo.toString().length==10 && (!$scope.isInValidArea))
         {
			StorageService.set("personalInfo", $scope.personalInfo);
			$state.go('vehicleInfo');
		}
	}
	$scope.getcity=function(city){
		if($scope.personalInfo.area!='' ||$scope.personalInfo.pincode!='' ){
			$scope.personalInfo.area='';
			$scope.personalInfo.pincode='';
		}
		return getApplicableCityList(city);	
	}
	$scope.getPincode=function(areaName) {
		if($scope.personalInfo.pincode!='' ){
			$scope.personalInfo.pincode='';
		}
		return getApplicablePinCodeList(areaName);
	}
	function getApplicablePinCodeList(areaName){
		var newArea= $filter("filter")($scope.arealist, {areaName:areaName});
		if(newArea.length===0){
			return true;
		}else{
			var result= false;
			angular.forEach(newArea, function(value, key){
	            if(value.areaName === areaName){
	            	result = true;
	            } 
			});
			if(result) {
				getlistOfPincode(newArea[0].areaCode);
				return false;
			}else{
				return true;
			}
		}
	}
	function getApplicableCityList(city){
//		alert(city);
		var newTemp= $filter("filter")($scope.cityMasterdtoList, {cityName:city});
		if(newTemp.length===0){
			return true;
		}else{
			var result= false;
			angular.forEach(newTemp, function(value, key){
	            if(value.cityName === city){
	            	result = true;
	            } 
			});
			if(result) {
				getlistOfAreas(newTemp[0].cityCode);
				return false;
			}else{
				return true;
			}
		}
	}
	function getlistOfCities(){
		PersonalInfoService.getlistOfCities()
		.then(function(d) {
			$scope.cityMasterdtoList = d.data.cityMasterdtoList;
			if(!$scope.personalInfo.isEnableAreaEdit){
				var newTemp= $filter("filter")($scope.cityMasterdtoList, {cityName:$scope.personalInfo.city});
				if(newTemp.length > 0){
					getlistOfAreas(newTemp[0].cityCode);
					getApplicablePinCodeList($scope.personalInfo.area);
					if($scope.personalInfo.isEnableAreaEdit){
						getApplicableCityList($scope.personalInfo.city);
					}
				}
			}
		}, function(error) {
			$log.error('failure loading movie', error);
		});
						
	}
	function getlistOfAreas(cityCode){
		PersonalInfoService.getAreaByCity(cityCode)
		.then(function(d) {
			$scope.arealist= d.data.areaMasterdtoList;
		}, function(error) {
			$log.error('failure loading movie', error);
		});
	}
	function getlistOfPincode(areaCode){
		PersonalInfoService.getallpincode(areaCode)
		.then(function(d) {
			if(''!=areaCode){
				$scope.personalInfo.pincode=d.data.stringList;	
			}
		}, function(error) {
			$log.error('failure loading movie', error);
		});
	}
	$scope.emailregEx = /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,5}(?:\.[a-z]{2})?)$/i;
});
